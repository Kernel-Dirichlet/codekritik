{
  "Python": {
    "branches": ["if", "elif", "else", "for", "while", "try", "except", "finally", "with"],
    "assignments": ["="],
    "conditions": ["==", "!=", "<", ">", "<=", ">=", "and", "or", "not"],
    "higher_order_fns": "def\\s+(\\w+)\\((.*?)\\):",
    "operators": ["+", "-", "*", "/", "%", "**", "//", "=", "+=", "-=", "*=", "/=", "%=", "**=", "//="]
  },
  "JavaScript": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>=", ">>>="],
    "conditions": ["==", "===", "!=", "!==", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "function\\s+(\\w+)\\((.*?)\\)\\s*\\{",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/=", "%=", "&", "|", "^", "~", "&&", "||", "!", "<<", ">>", ">>>", "=", "==", "===", "!=", "!==", "<", ">", "<=", ">="]
  },
  "Java": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default", "try", "catch", "finally"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>=", ">>>="],
    "conditions": ["==", "!=", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "(public|protected|private)?\\s*(final)?\\s*(\\w+|\\w+\\s*<.*>)\\s+(\\w+)\\((.*?)\\)\\s*\\{",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/=", "%=", "&", "|", "^", "~", "&&", "||", "!", "<<", ">>", "=", "==", "!=", "<", ">", "<=", ">="]
  },
  "C": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>="],
    "conditions": ["==", "!=", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "\\w+\\s+\\**\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\}",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/=", "%=", "&", "|", "^", "~", "&&", "||", "!", "<<", ">>", "=", "==", "!=", "<", ">", "<=", ">="]
  },
  "C++": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>="],
    "conditions": ["==", "!=", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "\\w+\\s+\\w+::\\w+\\s*\\([^)]*\\)\\s*(const)?\\s*(override)?\\s*(final)?\\s*\\{[^}]*\\}",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/=", "%=", "&", "|", "^", "~", "&&", "||", "!", "<<", ">>", "=", "==", "!=", "<", ">", "<=", ">="]
  },
  "C#": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default", "try", "catch", "finally"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>="],
    "conditions": ["==", "!=", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "\\w+\\s+\\w+\\s*\\([^)]*\\)\\s*\\{[^}]*\\}",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/=", "%=", "&", "|", "^", "~", "&&", "||", "!", "<<", ">>", "=", "==", "!=", "<", ">", "<=", ">="]
  },
  "Objective-C": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>="],
    "conditions": ["==", "!=", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "[\+-]\\s*\\([^)]*\\)\\s*\\{[^}]*\\}",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/=", "%=", "&", "|", "^", "~", "&&", "||", "!", "<<", ">>", "=", "==", "!=", "<", ">", "<=", ">="]
  },
  "TypeScript": {
    "branches": ["if", "else", "for", "while", "do", "switch", "case", "default"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", "&=", "|=", "^=", "<<=", ">>="],
    "conditions": ["==", "===", "!=", "!==", "<", ">", "<=", ">=", "&&", "||", "!", "?", ":"],
    "higher_order_fns": "(public|protected|private)?\\s*(final)?\\s*(\\w+|\\w+\\s*<.*>)\\s+(\\w+)\\((.*?)\\)\\s*:\\s*(\\w+)\\s*=>\\s*\\{[^}]*\\}",
    "operators": ["+", "-", "*", "/", "%", "++", "--", "+=", "-=", "*=", "/="],

 "Scala": {
    "branches": ["if", "else", "match", "case", "for", "while", "try", "catch", "finally"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "%=", ":="],
    "conditions": ["==", "!=", ">", "<", ">=", "<="],
    "higher_order_fns": "(def|val|var)\\s+\\w+\\s*=\\s*(\\([^()]*\\)\\s*=>\\s*.*|[^()]*=>.*|[A-Za-z0-9]+\\.\\w+)",
    "operators": ["+", "-", "*", "/", "%", "!", "&", "|", "^", "~", "<<", ">>", ">>>", "&&", "||", "==", "!=", ">", "<", ">=", "<=", ":", "=", "+=", "-=", "*=", "/=", "%="]
  },

 "Lisp": {
    "branches": ["if", "cond", "case"],
    "assignments": ["set", "setq"],
    "conditions": ["="],
    "higher_order_fns": "(defun\\s+\\w+\\s*\\([^()]*\\)\\s+.*|(lambda\\s*\\([^()]*\\)\\s*\\(.*\\)))",
    "operators": ["+", "-", "*", "/", "%", "==", "!=", ">", "<", ">=", "<=", "and", "or", "not"]
  },
  "Clojure": {
    "branches": ["if", "cond", "case"],
    "assignments": ["def", "let", "letfn", "defn", "defmacro"],
    "conditions": ["=", "not=", "<", ">", "<=", ">="],
    "higher_order_fns": "(fn\\s+\\w+\\s*\\[.*\\]\\s*.*|(fn\\s*\\[.*\\]\\s*\\(.*\\)))",
    "operators": ["+", "-", "*", "/", "mod", "==", "!=", ">", "<", ">=", "<=", "and", "or", "not"]
  },
  "FORTRAN": {
    "branches": ["if", "elseif", "else", "do", "while"],
    "assignments": ["=", "+=", "-=", "*=", "/=", "**="],
    "conditions": ["==", "/=", ">", "<", ">=", "<="],
    "higher_order_fns": null,
    "operators": ["+", "-", "*", "/", "**", "=", "==", "/=", ">", "<", ">=", "<=", "and", "or", "not"]
  },
  "PHP": {
    "branches": ["if", "else", "elseif", "for", "foreach", "while", "do", "switch", "case", "break", "continue", "try", "catch", "finally"],
    "assignments": ["=", "+=", "-=", "*=", "/=", ".="],
    "conditions": ["==", "!=", ">", "<", ">=", "<="],
    "higher_order_fns": null,
    "operators": ["+", "-", "*", "/", "%", "**", "=", "+=", "-=", "*=", "/=", "%=", "==", "!=", ">", "<", ">=", "<=", "&&", "||", "!", "&", "|", "^", "~", "<<", ">>", ".", "->", "=>", "===", "!=="]
  },
  "R": {
    "branches": ["if", "else", "else if", "for", "while", "repeat", "break", "next"],
    "assignments": ["<-", "<<-", "=", ":="],
    "conditions": ["==", "!=", ">", "<", ">=", "<="],
    "higher_order_fns": null,
    "operators": ["+", "-", "*", "/", "^", "%%", "%/%", ":", "==", "!=", ">", "<", ">=", "<=", "&&", "||", "!", "&", "|", "^", "~", ":", "->"]
  },
  "Julia": {
    "branches": ["if", "elseif", "else", "for", "while", "try", "catch", "finally"],
    "assignments": ["=", "+=", "-=", "*=", "/=", ".=", "^="],
    "conditions": ["==", "!=", ">", "<", ">=", "<="],
    "higher_order_fns": "(function|function\\s+[A-Za-z0-9_]+)",
    "operators": ["+", "-", "*", "/", "^", "=", "==", "!=", ">", "<", ">=", "<=", "&&", "||", "&", "|", "~", "!", "<<", ">>", "~=", ".=", "^=", "|>", ":="]
  },
  "Rust": {
    "branches": ["if", "else", "else if", "match"],
    "assignments": ["let", "mut"],
    "conditions": ["==", "!=", ">", "<", ">=", "<="],
    "higher_order_fns": "(fn\\s+\\w+\\s*\\([^()]*\\)\\s*->\\s*.*|\\([^()]*\\)\\s*->\\s*.*)",
    "operators": ["+", "-", "*", "/", "%", "==", "!=", ">", "<", ">=", "<=", "&&", "||", "!"]
  },

